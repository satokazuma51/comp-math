import numpy as np
import matplotlib.pyplot as plt

def find_quadratic_roots(a, b, c):
    root1 = (-b + np.sqrt(b**2 - 4*a*c)) / (2*a)
    root2 = (-b - np.sqrt(b**2 - 4*a*c)) / (2*a)
    return root1, root2

def fixed_point_iteration(g,x0,tol,max_iter, true_root):
    results=[]
    x=x0
    for i in range(max_iter):
        x_next = g(x)
        absolute_error=abs(true_root-x_next)
        results.append((i+1,x_next,absolute_error))
        if abs(x_next - x) < tol:  
            break
        x = x_next
    return results

def f(x):
    return x**2-6*x+5
def g(x):
    return (x**2+5)/6

root1,root2=find_quadratic_roots(1, -6, 5)

true_root=root2

results = fixed_point_iteration(g, 0.5, 1e-6, 10, true_root)
print(f"True root: {true_root}")
print(f"Results")
for i,x,abs_err in results:
    print(f"Iteration: {i}, Current guess: {x}, Absolute error: {abs_err}")
