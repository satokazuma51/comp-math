import numpy as np
import matplotlib.pyplot as plt
import cmath

def muller_method(f, x0, x1, x2, tol, max_iter=100):
    for _ in range(max_iter):
        h0 = x1 - x0
        h1 = x2 - x1
        delta0 = (f(x1) - f(x0)) / h0
        delta1 = (f(x2) - f(x1)) / h1
        a = (delta1 - delta0) / (h1 + h0)
        b = a * h1 + delta1
        c = f(x2)

        discriminant = cmath.sqrt(b**2 - 4*a*c)
        if abs(b + discriminant) > abs(b - discriminant):
            denominator = b + discriminant
        else:
            denominator = b - discriminant

        x3 = x2 - (2 * c) / denominator  

        if abs(x3 - x2) < tol:  
            return x3
        x0, x1, x2 = x1, x2, x3

    print("The method did not converge within the specified number of iterations.")
    return None

def f(x):
    return x**3 - x**2 + x + 1

root = muller_method(f, -1, 0, 1, 1e-6)
result_value=f(root)
absolute_error=abs(result_value) 

print(f"Root: {root}, Result: {result_value}, Absolute_error {absolute_error}")
